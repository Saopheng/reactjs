{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","Link","to","defaultProps","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cef7e457.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'May App'\r\n}\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => \r\n        contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact => \r\n            contact.id === action.payload.id \r\n            ? (contact = action.payload) \r\n            : contact\r\n          )\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    // contacts : [\r\n    //   {\r\n    //     id: 1,\r\n    //     name: 'Henry Johnson',\r\n    //     email: 'henry@gmail.com',\r\n    //     phone: '111-111-111'\r\n    //   },\r\n    //   {\r\n    //     id: 2,\r\n    //     name: 'John Doe',\r\n    //     email: 'john@gmail.com',\r\n    //     phone: '222-111-222'\r\n    //   },\r\n    //   {\r\n    //     id: 3,\r\n    //     name: 'Traversy media',\r\n    //     email: 'traversy@gmail.com',\r\n    //     phone: '111-222-111'\r\n    //   }\r\n    // ],\r\n    dispatch: action => \r\n    this.setState(state => reducer(state, action))\r\n    \r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n      // .then(res => this.setState({ contacts: res.data}));\r\n\r\n    this.setState({contacts: res.data});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  // constructor() {\r\n    // super();\r\n    state = {\r\n      showContactInfo: false\r\n    };\r\n  // }\r\n  onShowClick = () => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // this.props.deleteClickHandler();\r\n\r\n    try{\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/user/${id}`);\r\n      // .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}));\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    } catch(e) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name}{' '}\r\n                <i \r\n                onClick={this.onShowClick} \r\n                className=\"fas fa-sort-down\"\r\n                style={{ cursor: 'pointer' }}\r\n                />\r\n\r\n                <i \r\n                className=\"fas fa-times\" \r\n                style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i \r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'\r\n                  }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? ( \r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul> \r\n              ) : null }\r\n              \r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  // deleteClickHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state;\r\n\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n  //   this.setState({\r\n  //     contacts: newContacts\r\n  //   });\r\n  // }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment >\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact \r\n                key={contact.id} \r\n                contact={contact} \r\n                // deleteClickHandler={this.deleteContact.bind(this, contact.id)} \r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n const TextInputGroup = ({\r\n   label,\r\n   name,\r\n   value,\r\n   placeholder,\r\n   type,\r\n   onChange,\r\n   error\r\n }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"{name}\">{label}</label>\r\n      <input \r\n      type={type}\r\n      name={name}\r\n      className={classnames('form-control form-control-md', {'is-invalid': error})}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n      />\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onSubmit = async (dispatch,e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if(name === '') {\r\n      this.setState({errors: {\r\n        name: 'Name is required'\r\n      }});\r\n      // return to stop setState\r\n      return;\r\n    }\r\n\r\n    if(email === '') {\r\n      this.setState({errors: {\r\n        email: 'Email is required'\r\n      }});\r\n      return;\r\n    }\r\n\r\n    if(phone === '') {\r\n      this.setState({errors: {\r\n        phone: 'Phone is required'\r\n      }});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n      // .then(res => dispatch({type: 'ADD_CONTACT', playload: res.data }));\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // dispatch({ type: 'ADD_CONTACT', payload: newContact });\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to home\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value});\r\n  // onEmailChange = e => this.setState({email: e.target.value});\r\n  // onPhoneChange = e => this.setState({phone: e.target.value});\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Content</div>\r\n              <div className=\"card-body\">\r\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  {/* \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    name=\"name\"\r\n                    className=\"form-control form-control-md\"\r\n                    placeholder=\"Enter Name...\" \r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    />\r\n                  </div> */}\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input \r\n                    type=\"email\" \r\n                    name=\"email\"\r\n                    className=\"form-control form-control-md\"\r\n                    placeholder=\"Enter Email...\" \r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    />\r\n                  </div> */}\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  {/* <div className=\"form-group\">\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input \r\n                    type=\"number\" \r\n                    name=\"phone\"\r\n                    className=\"form-control form-control-md\"\r\n                    placeholder=\"Enter Phone...\" \r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    />\r\n                  </div> */}\r\n                  <input \r\n                    type=\"submit\" \r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch,e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if(name === '') {\r\n      this.setState({errors: {\r\n        name: 'Name is required'\r\n      }});\r\n      // return to stop setState\r\n      return;\r\n    }\r\n\r\n    if(email === '') {\r\n      this.setState({errors: {\r\n        email: 'Email is required'\r\n      }});\r\n      return;\r\n    }\r\n\r\n    // es6 put only one param\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    // get id from url\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    // redirect to home\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Content</div>\r\n              <div className=\"card-body\">\r\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input \r\n                    type=\"submit\" \r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('componentDidMount...');\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }));\r\n  }\r\n\r\n  // componentEillMount() {\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n\r\n  // componentWillReceiveProps(newxtProps, nextState) {\r\n  //   console.log('componentWillReceiveProps...');\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(newxtProps, prevState) {\r\n  //   console.log('getDerivedStateFromProps...');\r\n  //   this.setState();\r\n  //   // return null;\r\n    \r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log('getSnapshotBeforeUpdate...');\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n        \n      </Provider>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}